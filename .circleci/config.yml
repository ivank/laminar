version: 2.1

commands:
  install-psql:
    description: Install packages to run arbitrary queries for postgres setup
    steps:
      - run: sudo apt-get update && sudo apt-get install postgresql

  yarn-install:
    description: Install cached yarn packages
    steps:
      - restore_cache:
          keys: ['v3-{{ checksum "yarn.lock" }}']
      - run: yarn

  yarn-save-cache:
    description: Save yarn packages cache
    steps:
      - save_cache:
          key: v3-{{ checksum "yarn.lock" }}
          paths: ['.yarn/cache']

  update-submodules:
    description: Update git submodules
    steps:
      - run:
          name: 'Update Submodules'
          command: |
            git submodule sync
            git submodule update --init
  init-postgres:
    description: Initialize postgres client and data
    steps:
      - install-psql
      - run:
          name: 'Run install scripts for examples'
          command: |
            psql postgres://example-admin:example-pass@localhost:5432/example < examples/docs/init.sql
            psql postgres://example-admin:example-pass@localhost:5432/example < examples/comms/init.sql
            psql postgres://example-admin:example-pass@localhost:5432/example < examples/petstore/init.sql
            psql postgres://example-admin:example-pass@localhost:5432/example < examples/split/init.sql
            psql postgres://example-admin:example-pass@localhost:5432/example < examples/data-loader/init.sql
            psql postgres://example-admin:example-pass@localhost:5432/example < packages/laminar/init.sql
            psql postgres://example-admin:example-pass@localhost:5432/example < packages/pg/init.sql
            psql postgres://example-admin:example-pass@localhost:5432/example < packages/fixtures/init.sql
jobs:
  test:
    parameters:
      node-image:
        type: string
      subset:
        type: enum
        enum: ['packages', 'examples']
    docker:
      - image: << parameters.node-image >>
      - image: postgres:13
        environment:
          POSTGRES_DB: example
          POSTGRES_USER: example-admin
          POSTGRES_PASSWORD: example-pass
      - image: confluentinc/cp-zookeeper:6.2.0
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      - image: confluentinc/cp-kafka:6.2.0
        environment:
          KAFKA_CLIENT_PORT: 29092
          KAFKA_HEAP_OPTS: -Xmx180M -Xms180M
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      - image: aivenoy/karapace:latest
        entrypoint:
          - /opt/karapace/start.sh
          - registry
        environment:
          KARAPACE_REGISTRY_ADVERTISED_HOSTNAME: karapace-registry
          KARAPACE_REGISTRY_BOOTSTRAP_URI: localhost:29092
          KARAPACE_REGISTRY_PORT: 8081
          KARAPACE_REGISTRY_HOST: 0.0.0.0
          KARAPACE_REGISTRY_CLIENT_ID: karapace
          KARAPACE_REGISTRY_GROUP_ID: karapace-registry
          KARAPACE_REGISTRY_MASTER_ELIGIBITY: 'true'
          KARAPACE_REGISTRY_TOPIC_NAME: _schemas
          KARAPACE_REGISTRY_LOG_LEVEL: WARNING

    steps:
      - checkout
      - update-submodules
      - yarn-install
      - yarn-save-cache
      - run: yarn lint:<< parameters.subset >>
      - run: yarn build
      - init-postgres
      - run: yarn test:<< parameters.subset >>

  publish:
    docker:
      - image: cimg/node:18.17.0
    steps:
      - checkout
      - yarn-install
      - run: yarn build
      - run: git config user.email "ovotech-ci@ovoenergy.com"
      - run: git config user.name "Ovotech CI"
      - run: YARN_NPM_AUTH_TOKEN=$NPM_TOKEN yarn publish

workflows:
  version: 2
  test:
    jobs:
      - test:
          matrix:
            parameters:
              node-image: ['cimg/node:18.17.0']
              subset: ['packages', 'examples']
          filters:
            branches:
              ignore: main

  deploy:
    jobs:
      - test:
          matrix:
            parameters:
              node-image: ['cimg/node:18.17.0']
              subset: ['packages', 'examples']
          filters:
            branches:
              only: main
      - publish:
          requires:
            - test
