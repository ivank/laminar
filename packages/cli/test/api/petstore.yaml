openapi: '3.0.0'
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://petstore.swagger.io/api
security:
  - BearerAuth: []
paths:
  /about:
    get:
      description: 'About text for the service'
      responses:
        '200':
          description: 'OK'
          content:
            '*/*':
              schema: { type: string }
  /pets:
    get:
      description: |
        Returns all pets from the system that the user has access to
        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.

        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
      operationId: findPets
      security: []
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: pagination
          in: query
          description: Container for all pagination params
          required: false
          schema:
            type: object
            properties:
              page:
                type: integer
                minimum: 0
                default: 0
              perPage:
                type: integer
                minimum: 1
                maximum: 100
                default: 25
            additionalProperties: false
            default:
              page: 0
              perPage: 25
        - name: sort
          in: query
          description: React admin sort object
          example: { "field": "createdAt", "order": "ASC" }
          schema:
            type: object
            properties:
              field:
                enum: ['name', 'tag']
              order:
                enum: ['ASC', 'DESC']
                default: 'ASC'
            additionalProperties: false
            default: {}
        - name: afterDateTime
          in: query
          description: After certain iso timestamp
          example: '2020-01-01T00:00:00.000Z'
          schema:
            type: string
            format: 'date-time'
        - name: afterDate
          in: query
          description: After certain date
          example: '2020-01-01'
          schema:
            type: string
            format: 'date'
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
            default: 1000
        - name: ids
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
        - name: isKitten
          in: query
          description: if true only show pets tagged as kittens
          required: false
          schema:
            type: boolean
        - name: price
          in: query
          description: Show pets of certain price
          required: false
          schema:
            type: number
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      security:
        - BearerAuth: []
          ApiKeyAuth: []
        - CookieAuth: []
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      parameters:
        - name: X-Trace-Token
          in: header
          description: a trace token to trace posts
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            examples:
              simple:
                summary: A simple example
                value:
                  name: Charlie
                  type: dog
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetCreated'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{id}:
    parameters:
      - name: id
        in: path
        description: ID of pet to delete
        required: true
        schema:
          type: string
          format: \d+
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      security:
        - BasicAuth: []
      parameters: []
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      security:
        - ApiKeyAuth: []
        - BasicAuth: []
      parameters: []
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    CookieAuth:
      type: apiKey
      in: cookie
      name: auth
  schemas:
    PetCreated:
      properties:
        pet: { $ref: '#/components/schemas/NewPet' }
        user:
          type: string
    Pet:
      allOf:
        - $ref: '#/components/schemas/NewPet'
        - required:
            - id
          properties:
            id:
              type: integer
              format: int64

    NewPet:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string
        addedOn:
          type: string
          format: date-time

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
